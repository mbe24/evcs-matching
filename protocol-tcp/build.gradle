buildscript {

    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.8'
    }
}
description = 'protocol-tcp'

apply plugin: 'com.google.protobuf'

dependencies {
    compile project(':protocol-api')
    compile project(':protocol-common')
    compile 'org.zeromq:jeromq:0.4.3'
    compile 'com.google.protobuf:protobuf-java:3.7.0-rc1'
    compile 'com.google.protobuf:protobuf-java-util:3.7.0-rc1'
//    compile 'org.msgpack:msgpack-core:0.8.16'
    compile "org.springframework.boot:spring-boot-starter:${springBootVersion}"
    testCompile 'junit:junit:4.12'
}

// see: https://stackoverflow.com/questions/32820728/simple-protobuf-compilation-with-gradle
protobuf {
    // configure the protoc executable
    protoc {
        // download from repositories
        artifact = 'com.google.protobuf:protoc:3.7.0-rc-2'
    }

    generateProtoTasks.generatedFilesBaseDir = "$projectDir" + "/src"
    generateProtoTasks {
        // all() returns the collection of all protoc tasks
        all().each { task ->
            // here you can configure the task
        }

        // in addition to all(), you may get the task collection by various
        // criteria:

        // (Java only) returns tasks for a sourceSet
        //ofSourceSet('main')
    }
}